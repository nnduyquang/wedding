// Generated by CoffeeScript 1.10.0
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  window.decollte = {};

  window.decollte.instances = {};

  window.decollte._instances = [];

  window.decollte.events = {};

  window.decollte.events.TRANSITIONEND = 'transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd';

  window.decollte.Base = (function() {
    function Base() {
      this._w = window.decollte;
      this._name = this.constructor.name;
      createjs.EventDispatcher.initialize(this);
    }

    Base.prototype.init = function() {};

    Base.prototype.fire = function(type, data) {
      if (data == null) {
        data = null;
      }
      return this.dispatchEvent({
        type: type,
        target: this,
        data: data
      });
    };

    return Base;

  })();

  window.decollte.Utils = (function() {
    function Utils() {}

    Utils.isset = function(data) {
      return typeof data !== 'undefined';
    };

    Utils.removeHyphen = function(val) {
      if (!val) {
        return null;
      }
      return val.replace(/-/g, "");
    };

    Utils.removeSlash = function(val) {
      if (!val) {
        return null;
      }
      return val.replace(/\//g, "");
    };

    Utils.uniformerHeight = function($container) {
      var children, group, list, targets;
      group = $container.data('group-num');
      children = $container.children();
      list = [];
      targets = [];
      return children.each(function() {
        var maxNum;
        list.push($(this).height());
        targets.push($(this));
        if (list.length >= group) {
          maxNum = Math.max.apply(null, list);
          $(targets).each(function() {
            return $(this).css({
              height: maxNum
            });
          });
          list = [];
          return targets = [];
        }
      });
    };

    Utils.getDocHeight = function() {
      return Math.max($(document).height(), $(window).height(), document.documentElement.clientHeight);
    };

    Utils.scrollTo = function(targetOffset, time, easing) {
      var ah, h;
      if (time == null) {
        time = 800;
      }
      if (easing == null) {
        easing = 'easeInOutQuart';
      }
      ah = window.decollte.Utils.getDocHeight() - $(window).height();
      h = targetOffset > ah ? ah : targetOffset;
      return $('html,body').stop().animate({
        scrollTop: h
      }, time, easing);
    };

    Utils.scrollToElement = function(elementId, time, easing) {
      var $t, e, error, offset, pt;
      if (time == null) {
        time = 800;
      }
      if (easing == null) {
        easing = 'easeInOutQuart';
      }
      try {
        if ($(elementId).length) {
          $t = $(elementId);
          offset = $(elementId).offset().top;
          pt = 0;
          if ($t.data('sc')) {
            pt = $t.data('sc');
          }
          offset = offset + pt;
        } else {
          offset = 0;
        }
      } catch (error) {
        e = error;
        offset = 0;
      }
      return window.decollte.Utils.scrollTo(offset, time, easing);
    };

    Utils.loadImages = function(imgs, callback) {
      var count, limit, onLoadOrError;
      limit = imgs.length;
      count = 0;
      onLoadOrError = (function(_this) {
        return function() {
          count += 1;
          if (count >= limit) {
            return callback.apply(_this);
          }
        };
      })(this);
      if (limit) {
        return imgs.each((function(_this) {
          return function(i, t) {
            var img, src;
            if (typeof t === 'string') {
              src = t;
            } else {
              src = $(t).attr('src');
            }
            img = $('<img>').attr('src', src);
            return img.on({
              load: function() {
                return onLoadOrError();
              },
              error: function() {
                return onLoadOrError();
              }
            });
          };
        })(this));
      } else {
        return callback.apply(this);
      }
    };

    Utils.getCustomFieldImageURL = function(data, id) {
      var url;
      if (data.custom_fields[id]) {
        url = data.custom_fields[id][0];
        if (url && url.indexOf(']') !== -1) {
          return url.substring(url.indexOf(']') + 1, url.length);
        } else {
          return url;
        }
      } else {
        return null;
      }
    };

    Utils.changeTitle = function(head) {
      return document.title = window.decollte.Utils.findAll(head, 'title').text();
    };

    Utils.getHeadAndBody = function(d) {
      var $body, $head, result;
      if (!d) {
        result = {
          head: null,
          body: null
        };
        return result;
      }
      if (/<html/i.test(d)) {
        $head = $(d.match(/<head[^>]*>([\s\S.]*)<\/head>/i)[0]);
        $body = $(d.match(/<body[^>]*>([\s\S.]*)<\/body>/i)[0]);
      } else {
        $head = $body = $(d);
      }
      result = {
        head: $head,
        body: $body
      };
      return result;
    };

    Utils.findAll = function(elems, selector) {
      return elems.filter(selector).add(elems.find(selector));
    };

    Utils.getCurrentBaseURL = function() {
      return location.href.replace(/\#.*$/, '').replace(/\?.*$/, '');
    };

    Utils.getQueries = function() {
      var element, j, len, param, paramName, paramValue, parameters, query, result;
      result = {};
      if (1 < window.location.search.length) {
        query = window.location.search.substring(1);
        parameters = query.split('&');
        for (j = 0, len = parameters.length; j < len; j++) {
          param = parameters[j];
          element = param.split('=');
          paramName = decodeURIComponent(element[0]);
          paramValue = decodeURIComponent(element[1]);
          result[paramName] = paramValue;
        }
      }
      return result;
    };

    Utils.windowFixOn = function() {
      window.decollte.Utils.currentScrollTop = $(window).scrollTop();
      return $('body').addClass('is-fixed').css({
        top: -1 * window.decollte.Utils.currentScrollTop
      });
    };

    Utils.windowFixOff = function() {
      $('body').removeClass('is-fixed').css({
        top: ''
      });
      return $('html, body').prop({
        scrollTop: window.decollte.Utils.currentScrollTop
      });
    };

    return Utils;

  })();

  $(function() {
    var _w, i, j, len, ref, results, setAnchor;
    setAnchor = function() {
      if ($('a[href^="#"]').length) {
        return $('a[href^="#"]').on({
          click: (function(_this) {
            return function(e) {
              var href;
              href = $(e.currentTarget).attr('href');
              window.decollte.Utils.scrollToElement(href);
              return false;
            };
          })(this)
        });
      }
    };
    setAnchor();
    _w = window.decollte;
    $('[data-j-class]').each(function(i, e) {
      var className, instance, isNoCreate, tmpClass;
      className = $(this).data('j-class');
      isNoCreate = Number($(this).data('j-no-create'));
      if (_w[className] && !isNoCreate) {
        tmpClass = _w[className];
        instance = new tmpClass($(this));
        if (!_w['instances'][className]) {
          _w['instances'][className] = [];
        }
        _w['instances'][className].push(instance);
        return _w['_instances'].push(instance);
      }
    });
    ref = _w['_instances'];
    results = [];
    for (j = 0, len = ref.length; j < len; j++) {
      i = ref[j];
      results.push(i.init());
    }
    return results;
  });

  window.decollte.ToTop = (function(superClass) {
    extend(ToTop, superClass);

    function ToTop($target) {
      this.$target = $target;
      ToTop.__super__.constructor.call(this, this.$target);
      this.isShown = false;
      $(window).on({
        "scroll.@_name": (function(_this) {
          return function() {
            var scrollTop;
            scrollTop = $(window).scrollTop();
            if (scrollTop >= 300) {
              return _this.show();
            } else {
              return _this.hide();
            }
          };
        })(this)
      });
    }

    ToTop.prototype.show = function() {
      if (this.isShown) {
        return;
      }
      this.isShown = true;
      return this.$target.addClass('is-active');
    };

    ToTop.prototype.hide = function() {
      if (!this.isShown) {
        return;
      }
      this.isShown = false;
      return this.$target.removeClass('is-active');
    };

    return ToTop;

  })(window.decollte.Base);

  window.decollte.Faq = (function(superClass) {
    extend(Faq, superClass);

    function Faq($target) {
      this.$target = $target;
      Faq.__super__.constructor.call(this, this.$target);
      $(window).load((function(_this) {
        return function() {
          return _this.initalize();
        };
      })(this));
      $('.p-faq-nav__item').on({
        'click': (function(_this) {
          return function(e) {
            var $t;
            $t = $(e.currentTarget);
            return _this.selected($t.data('id'));
          };
        })(this)
      });
    }

    Faq.prototype.initalize = function() {
      var hash;
      hash = location.hash.substr(1);
      if (hash === '') {
        return this.selected($('.p-faq-nav__item:first').data('id'));
      } else {
        return this.selected(hash);
      }
    };

    Faq.prototype.selected = function(selectedId) {
      $('.p-faq-body').css({
        'display': 'none'
      });
      $('.p-faq-body[data-id="' + selectedId + '"]').css({
        'display': 'block'
      });
      $('.p-faq-nav__item').removeClass('p-faq-nav__item--is-active');
      return $('.p-faq-nav__item[data-id="' + selectedId + '"]').addClass('p-faq-nav__item--is-active');
    };

    return Faq;

  })(window.decollte.Base);

  window.decollte.MainVisualMovie = (function(superClass) {
    extend(MainVisualMovie, superClass);

    function MainVisualMovie($target) {
      var obj;
      this.$target = $target;
      this.resize = bind(this.resize, this);
      MainVisualMovie.__super__.constructor.call(this, this.$target);
      this.ratio = 16 / 9;
      this.iframe = this.$target.find('iframe');
      window.onYouTubeIframeAPIReady = (function(_this) {
        return function() {
          return _this.onReady();
        };
      })(this);
      this.ready();
      $(window).on((
        obj = {},
        obj["resize." + this._name] = (function(_this) {
          return function() {
            return _this.resize();
          };
        })(this),
        obj
      ));
      $(window).trigger("resize." + this._name);
    }

    MainVisualMovie.prototype.ready = function() {
      var firstScriptTag, tag;
      tag = document.createElement('script');
      tag.src = "https://www.youtube.com/iframe_api";
      firstScriptTag = document.getElementsByTagName('script')[0];
      return firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
    };

    MainVisualMovie.prototype.setYT = function() {
      return this.player = new YT.Player(this.iframe.get(0), {
        height: '100%',
        width: '100%',
        events: {
          onReady: (function(_this) {
            return function(e) {
              return _this.onMovieReady(e);
            };
          })(this),
          onStateChange: (function(_this) {
            return function(e) {
              if (e.data === YT.PlayerState.PLAYING) {

              } else if (e.data === YT.PlayerState.ENDED) {
                return _this.player.seekTo(0);
              }
            };
          })(this)
        }
      });
    };

    MainVisualMovie.prototype.resize = function() {
      var height, pHeight, pWidth, width;
      width = this.$target.width();
      height = this.$target.height();
      if (width / this.ratio < height) {
        pWidth = Math.ceil(height * this.ratio);
        return this.iframe.css({
          width: pWidth,
          height: height,
          left: (width - pWidth) >> 1,
          top: 0
        });
      } else {
        pHeight = Math.ceil(width / this.ratio);
        return this.iframe.css({
          width: width,
          height: pHeight,
          left: 0,
          top: (height - pHeight) >> 1
        });
      }
    };

    MainVisualMovie.prototype.onMovieReady = function(e) {
      return e.target.mute();
    };

    MainVisualMovie.prototype.onReady = function() {
      return this.setYT();
    };

    return MainVisualMovie;

  })(window.decollte.Base);

  window.decollte.PickupCampaigns = (function(superClass) {
    extend(PickupCampaigns, superClass);

    function PickupCampaigns($target) {
      var obj;
      this.$target = $target;
      this.prevTo = bind(this.prevTo, this);
      this.nextTo = bind(this.nextTo, this);
      this.moveTo = bind(this.moveTo, this);
      PickupCampaigns.__super__.constructor.call(this, this.$target);
      this.ITEM_MARGIN = 30;
      this.MOVE_TIME = 550;
      this.MOVE_EASING = 'easeOutQuart';
      this.WAIT_TIME = 5000;
      this.isMoving = false;
      this.isMousEnter = false;
      this.intervalId = null;
      this.$items = this.$target.find('.j-pickup-campaigns-items');
      this.updateItemList();
      this.itemWidth = this.$itemList.first().width();
      this.itemBaseNum = this.$itemList.length;
      this.itemNum = this.itemBaseNum * 2;
      this.totalWidth = (this.itemWidth + this.ITEM_MARGIN) * this.itemBaseNum;
      this.totalWidth = this.totalWidth * 2;
      this.$items.css({
        width: this.totalWidth
      });
      this.$nextBtn = this.$target.find('.p-pickup-campaigns__next');
      this.$prevBtn = this.$target.find('.p-pickup-campaigns__prev');
      this.$nextBtn.on({
        click: (function(_this) {
          return function() {
            _this.nextTo(true);
            return false;
          };
        })(this)
      });
      this.$prevBtn.on({
        click: (function(_this) {
          return function() {
            _this.prevTo(true);
            return false;
          };
        })(this)
      });
      this.$target.on({
        mouseenter: (function(_this) {
          return function() {
            _this.isMousEnter = true;
            return _this.stopWait();
          };
        })(this),
        mouseleave: (function(_this) {
          return function() {
            _this.isMousEnter = false;
            return _this.wait();
          };
        })(this)
      });
      this.$itemList.each((function(_this) {
        return function(i, e) {
          var $clone, $e;
          $e = $(e);
          $clone = $e.clone();
          return _this.$items.append($clone);
        };
      })(this));
      $(window).on((
        obj = {},
        obj["resize." + this._name] = (function(_this) {
          return function() {
            return _this.setBaseLeft();
          };
        })(this),
        obj
      ));
      this.updateItemList();
      this.setBaseLeft();
      this.wait();
    }

    PickupCampaigns.prototype.wait = function() {
      this.stopWait();
      return this.intervalId = setTimeout((function(_this) {
        return function() {
          return _this.nextTo();
        };
      })(this), this.WAIT_TIME);
    };

    PickupCampaigns.prototype.stopWait = function() {
      if (this.intervalId) {
        return clearInterval(this.intervalId);
      }
    };

    PickupCampaigns.prototype.updateItemList = function() {
      return this.$itemList = this.$items.find('.j-pickup-campaigns-item');
    };

    PickupCampaigns.prototype.moveTo = function(pos, isForce, isFirst) {
      if (isForce == null) {
        isForce = false;
      }
      if (isFirst == null) {
        isFirst = false;
      }
      if (!isForce) {
        if (this.isMousEnter) {
          return;
        }
      }
      if (this.isMoving) {
        return;
      }
      this.isMoving = true;
      return this.$items.stop().animate({
        marginLeft: pos
      }, this.MOVE_TIME, this.MOVE_EASING, (function(_this) {
        return function() {
          var $tmpItem;
          if (isFirst) {
            $tmpItem = _this.$itemList.first();
            _this.$items.append($tmpItem);
          } else {
            $tmpItem = _this.$itemList.last();
            _this.$items.prepend($tmpItem);
          }
          _this.$items.css({
            marginLeft: _this.baseLeft
          });
          _this.isMoving = false;
          _this.updateItemList();
          return _this.wait();
        };
      })(this));
    };

    PickupCampaigns.prototype.nextTo = function(isForce) {
      var pos;
      if (isForce == null) {
        isForce = false;
      }
      this.stopWait();
      pos = this.baseLeft - (this.itemWidth + this.ITEM_MARGIN);
      return this.moveTo(pos, isForce, true);
    };

    PickupCampaigns.prototype.prevTo = function(isForce) {
      var pos;
      if (isForce == null) {
        isForce = false;
      }
      this.stopWait();
      pos = this.baseLeft + (this.itemWidth + this.ITEM_MARGIN);
      return this.moveTo(pos, isForce, false);
    };

    PickupCampaigns.prototype.setBaseLeft = function() {
      this.baseLeft = (this.$target.width() - this.itemWidth) >> 1;
      this.baseLeft = this.baseLeft - (this.itemBaseNum * (this.itemWidth + this.ITEM_MARGIN));
      return this.$items.css({
        marginLeft: this.baseLeft
      });
    };

    return PickupCampaigns;

  })(window.decollte.Base);

  window.decollte.Header = (function(superClass) {
    extend(Header, superClass);

    function Header($target) {
      this.$target = $target;
      Header.__super__.constructor.call(this, this.$target);
      $(window).on('scroll', function() {
        if ($(this).scrollTop() > 68) {
          return $('.p-header').addClass('p-header--is-scroll');
        } else {
          return $('.p-header').removeClass('p-header--is-scroll');
        }
      });
    }

    Header.prototype.testFunc = function() {};

    return Header;

  })(window.decollte.Base);

  window.decollte.OurArea = (function(superClass) {
    extend(OurArea, superClass);

    function OurArea($target) {
      this.$target = $target;
      OurArea.__super__.constructor.call(this, this.$target);
      $('.p-area-select-nav__item a').mouseover(function() {
        var selected_map_name;
        $('.p-our-area__map__content').removeClass('p-our-area__map__content--is-active');
        selected_map_name = $(this).attr('data-map-name');
        $('[data-map-img-name=' + selected_map_name + ']').addClass('p-our-area__map__content--is-active');
        $('.p-area-select-nav__item a').css('color', 'white');
        return $(this).css('color', '#c30d23');
      }).mouseout(function() {});
    }

    return OurArea;

  })(window.decollte.Base);

  window.decollte.Gallery = (function(superClass) {
    extend(Gallery, superClass);

    function Gallery($target) {
      this.$target = $target;
      Gallery.__super__.constructor.call(this, this.$target);
      this.indexNow = 0;
      this.indexAll = $('.c-gallery__item').length;
      this.isModal = 0;
      $('.c-gallery__item').each((function(_this) {
        return function(i, e) {
          return $(e).attr('data-id', i + 1);
        };
      })(this));
      $('.c-lightbox__photo').each((function(_this) {
        return function(i, e) {
          return $(e).attr('data-id', i + 1);
        };
      })(this));
      $('.c-gallery__item').on({
        'click': (function(_this) {
          return function(e) {
            var $t;
            $t = $(e.currentTarget);
            _this.indexNow = $t.data('id');
            return _this.show();
          };
        })(this)
      });
      $('.c-lightbox__btn--delete').on({
        'click': (function(_this) {
          return function() {
            console.log('delete');
            return _this.quit();
          };
        })(this)
      });
      $('.c-lightbox__filter').on({
        'click': (function(_this) {
          return function() {
            return _this.quit();
          };
        })(this)
      });
      $('.c-lightbox__btn--next').on({
        'click': (function(_this) {
          return function() {
            return _this.next();
          };
        })(this)
      });
      $('.c-lightbox__btn--prev').on({
        'click': (function(_this) {
          return function() {
            return _this.prev();
          };
        })(this)
      });
    }

    Gallery.prototype.show = function() {
      $('.c-lightbox').css({
        'display': 'block',
        'opacity': 0
      }).velocity({
        'opacity': 1
      }, {
        duration: 150,
        easing: 'ease-out'
      });
      $('.c-lightbox__photo[data-id="' + this.indexNow + '"]').addClass('c-lightbox__photo--is-active');
      $('body').css({
        'overflow': 'hidden'
      });
      return this.isModal = true;
    };

    Gallery.prototype.quit = function() {
      this.indexNow = 0;
      return $('.c-lightbox').velocity({
        'opacity': 0
      }, {
        duration: 150,
        easing: 'ease-in',
        complete: function() {
          $('.c-lightbox').css({
            'display': 'none'
          });
          $('.c-lightbox__photo--is-active').css({
            'left': '',
            'marginLeft': ''
          });
          $('.c-lightbox__photo').removeClass('c-lightbox__photo--is-active');
          $('body').css({
            'overflow': ''
          });
          return this.isModal = false;
        }
      });
    };

    Gallery.prototype.next = function() {
      var duration, easing;
      easing = "easeOutQuart";
      duration = 450;
      this.indexNow += 1;
      $('.c-lightbox__photo--is-active').stop().velocity({
        'left': '0px',
        'marginLeft': '-645px'
      }, {
        duration: duration,
        easing: easing,
        complete: function() {
          return $(this).css({
            'left': '',
            'marginLeft': ''
          });
        }
      });
      $('.c-lightbox__photo').removeClass('c-lightbox__photo--is-active');
      if (this.indexNow === this.indexAll + 1) {
        this.indexNow = 1;
        $('.c-lightbox__photo[data-id="' + this.indexNow + '"]').addClass('c-lightbox__photo--is-active');
      } else {
        $('.c-lightbox__photo[data-id="' + this.indexNow + '"]').addClass('c-lightbox__photo--is-active');
      }
      $('.c-lightbox__photo--is-active').css({
        'left': '100%',
        'marginLeft': '0'
      });
      return $('.c-lightbox__photo--is-active').stop().velocity({
        'top': '50%',
        'left': '50%',
        'marginTop': '-237.5px',
        'marginLeft': '-316.5px'
      }, {
        duration: duration,
        easing: easing
      });
    };

    Gallery.prototype.prev = function() {
      var duration, easing;
      easing = "easeOutQuart";
      duration = 450;
      this.indexNow -= 1;
      $('.c-lightbox__photo--is-active').stop().velocity({
        'left': '100%',
        'marginLeft': '0'
      }, {
        duration: duration,
        easing: easing,
        complete: function() {
          return $(this).css({
            'left': '',
            'marginLeft': ''
          });
        }
      });
      $('.c-lightbox__photo').removeClass('c-lightbox__photo--is-active');
      if (this.indexNow === 0) {
        this.indexNow = this.indexAll;
        $('.c-lightbox__photo[data-id="' + this.indexNow + '"]').addClass('c-lightbox__photo--is-active');
      } else {
        $('.c-lightbox__photo[data-id="' + this.indexNow + '"]').addClass('c-lightbox__photo--is-active');
      }
      $('.c-lightbox__photo--is-active').css({
        'left': '0',
        'marginLeft': '-633px'
      });
      return $('.c-lightbox__photo--is-active').stop().velocity({
        'top': '50%',
        'left': '50%',
        'marginTop': '-237.5px',
        'marginLeft': '-316.5px'
      }, {
        duration: duration,
        easing: easing
      });
    };

    return Gallery;

  })(window.decollte.Base);

  window.decollte.MoreContents = (function(superClass) {
    extend(MoreContents, superClass);

    function MoreContents($target) {
      this.$target = $target;
      MoreContents.__super__.constructor.call(this, this.$target);
      this.$more = this.$target.find('[data-j-selector="more"]');
      this.$contents = this.$target.find('[data-j-selector="contents"]');
      this.url = this.$contents.data('j-next-url');
      this.createSpin();
      this.isLoading = false;
      if (this.$more.length) {
        this.$more.on({
          click: (function(_this) {
            return function() {
              _this.load();
              return false;
            };
          })(this)
        });
      }
    }

    MoreContents.prototype.createSpin = function() {
      var options;
      options = {
        lines: 10,
        length: 4,
        width: 3,
        radius: 8,
        scale: 1,
        corners: 1,
        color: '#fff',
        opacity: 0.25,
        rotate: 0,
        direction: 1,
        speed: 1,
        trail: 60,
        fps: 20,
        zIndex: 2e9,
        className: 'spinner',
        top: '50%',
        left: '50%',
        shadow: false,
        hwaccel: false,
        position: 'absolute'
      };
      return this.spinner = new Spinner(options).spin(this.$more.get(0));
    };

    MoreContents.prototype.changeLoading = function() {
      this.isLoading = false;
      if (this.$more && this.$more.length) {
        return this.$more.addClass('is-loading');
      }
    };

    MoreContents.prototype.changeUnLoading = function() {
      this.isLoading = false;
      if (this.$more && this.$more.length) {
        return this.$more.removeClass('is-loading');
      }
    };

    MoreContents.prototype.removeMoreBtn = function() {
      this.$more.remove();
      this.$more.off('click');
      return this.$more = null;
    };

    MoreContents.prototype.addContents = function(data) {
      var $content, $contents;
      $contents = $(data);
      this.url = $contents.data('j-next-url');
      $content = $contents.find('[data-j-selector="content"]');
      this.$contents.append($content);
      setTimeout((function(_this) {
        return function() {
          return $content.addClass('is-show');
        };
      })(this), 100);
      if (!this.url) {
        return this.removeMoreBtn();
      }
    };

    MoreContents.prototype.load = function() {
      if (this.isLoading) {
        return;
      }
      this.isLoading = true;
      this.changeLoading();
      return $.ajax({
        url: this.url,
        type: 'post',
        data: {
          js: 1
        },
        dataType: 'html',
        success: (function(_this) {
          return function(data) {
            _this.addContents(data);
            return _this.changeUnLoading();
          };
        })(this),
        error: (function(_this) {
          return function() {
            return _this.changeUnLoading();
          };
        })(this)
      });
    };

    return MoreContents;

  })(window.decollte.Base);

  window.decollte.SearchPlanHorizontal = (function(superClass) {
    extend(SearchPlanHorizontal, superClass);

    function SearchPlanHorizontal($target) {
      this.$target = $target;
      SearchPlanHorizontal.__super__.constructor.call(this, this.$target);
      this.isFixed = false;
      this.targetPos = this.$target.offset().top;
      this.targetHeight = this.$target.outerHeight();
      $(this.$target).attr('data-is-clone', '0');
      this.$clone = $(this.$target).clone().attr('data-is-clone', '1');
      this.$cloneTarget = $('<div>');
      this.$cloneTarget.css({
        'z-index': 9999,
        'display': 'none',
        position: 'fixed',
        top: 62,
        left: 0,
        width: '100%'
      });
      this.$cloneTargetInner = $('<div>');
      this.$cloneTargetInner.css({
        'max-width': 1306,
        'min-width': 1024,
        'margin-left': 'auto',
        'margin-right': 'auto',
        'box-sizing': 'border-box',
        borderLeft: '1px solid transparent',
        borderRight: '1px solid transparent'
      });
      this.$cloneTarget.append(this.$cloneTargetInner);
      this.$cloneTargetInner.append(this.$clone);
      $('body').append(this.$cloneTarget);
      $(window).scroll((function(_this) {
        return function() {
          var changePos, containerPos, containerScrollPos, scrollTop;
          scrollTop = $(window).scrollTop();
          containerPos = $('#container').offset().top;
          containerScrollPos = scrollTop - containerPos;
          changePos = $('#container').height() - ($('#footer').height() + 100);
          if (_this.targetPos < scrollTop + 62) {
            $(_this.$cloneTarget).css({
              'display': 'block'
            });
            if (changePos < containerScrollPos + _this.targetHeight + 62) {
              $('[data-is-clone=1]').addClass('p-search-plan--no-active');
              return $('[data-is-clone=1]').removeClass('p-search-plan--active');
            } else {
              $('[data-is-clone=1]').addClass('p-search-plan--active');
              return $('[data-is-clone=1]').removeClass('p-search-plan--no-active');
            }
          } else {
            return $(_this.$cloneTarget).css({
              'display': 'none'
            });
          }
        };
      })(this));
    }

    return SearchPlanHorizontal;

  })(window.decollte.Base);

  window.decollte.SearchPlanVartical = (function(superClass) {
    extend(SearchPlanVartical, superClass);

    function SearchPlanVartical($target) {
      var obj, obj1;
      this.$target = $target;
      SearchPlanVartical.__super__.constructor.call(this, this.$target);
      window.decollte.SearchPlanVartical.HEADER_HEIGHT = 62;
      this.$footer = $('#footer');
      this.$positionBaseTarget = $('[data-j-selector="search-plan-position-base"]');
      this.footerTop = this.$footer.offset().top;
      this.maxTop = this.$positionBaseTarget.offset().top;
      this.maxBottom = this.footerTop - 50;
      this.cloneBottom = 0;
      this.cloneTurningBottom = 0;
      this.isFixed = false;
      this.isFixedTop = false;
      this.scrollStatus = 'down';
      this.changePoint = 0;
      this.scrollTop = $(window).scrollTop();
      this.pastScrollTop = $(window).scrollTop();
      this.targetTop = this.$target.offset().top;
      this.targetHeight = this.$target.outerHeight();
      this.windowHeight = $(window).height();
      this.createClone();
      $(window).on((
        obj = {},
        obj["resize." + this._name] = (function(_this) {
          return function() {
            _this.windowHeight = $(window).height();
            _this.targetTop = _this.$target.offset().top;
            _this.targetHeight = _this.$target.outerHeight();
            _this.updateMaxBottom();
            return _this.onScrollDown();
          };
        })(this),
        obj
      ));
      $(window).on((
        obj1 = {},
        obj1["scroll." + this._name] = (function(_this) {
          return function() {
            _this.updateMaxBottom();
            _this.scrollTop = $(window).scrollTop();
            if (_this.scrollTop >= _this.pastScrollTop) {
              if (_this.scrollStatus !== 'down') {
                _this.changePoint = _this.scrollTop;
                _this.cloneTurningBottom = _this.cloneBottom;
              }
              _this.scrollStatus = 'down';
              _this.onScrollDown();
            } else {
              if (_this.scrollStatus !== 'up') {
                _this.changePoint = _this.scrollTop;
                _this.cloneTurningBottom = _this.cloneBottom;
              }
              _this.scrollStatus = 'up';
              _this.onScrollUp();
            }
            return _this.pastScrollTop = _this.scrollTop;
          };
        })(this),
        obj1
      ));
      $(window).trigger("resize." + this._name);
      $(window).trigger("scroll." + this._name);
    }

    SearchPlanVartical.prototype.updateMaxBottom = function() {
      if (this.windowHeight - window.decollte.SearchPlanVartical.HEADER_HEIGHT >= this.targetHeight) {
        if (!this.isFixedTop) {
          this.isFixedTop = true;
          this.$clone.addClass('is-fixed-top');
        }
      } else {
        if (this.isFixedTop) {
          this.isFixedTop = false;
          this.$clone.removeClass('is-fixed-top');
        }
      }
      this.footerTop = this.$footer.offset().top;
      this.maxBottom = this.footerTop - 50;
      return this.maxTop = this.$positionBaseTarget.offset().top;
    };

    SearchPlanVartical.prototype.checkMaxBottom = function() {
      if (this.scrollTop + this.windowHeight >= this.maxBottom) {
        this.tmpBottom = this.scrollTop + this.windowHeight - this.maxBottom;
        this.changePoint = this.scrollTop;
        return this.$cloneTarget.css({
          top: '',
          bottom: this.tmpBottom
        });
      }
    };

    SearchPlanVartical.prototype.checkMaxBottomForLargeWindow = function() {
      if (this.scrollTop + this.windowHeight >= this.maxBottom) {
        this.tmpBottom = this.scrollTop + this.windowHeight - this.maxBottom;
        this.changePoint = this.scrollTop;
        return this.$cloneTarget.css({
          top: window.decollte.SearchPlanVartical.HEADER_HEIGHT - this.tmpBottom,
          bottom: ''
        });
      }
    };

    SearchPlanVartical.prototype.checkFixedForLargeWindow = function() {
      if (this.scrollTop + window.decollte.SearchPlanVartical.HEADER_HEIGHT >= this.maxTop) {
        this.showClone();
        this.$cloneTarget.css({
          bottom: '',
          top: window.decollte.SearchPlanVartical.HEADER_HEIGHT
        });
        return this.checkMaxBottomForLargeWindow();
      } else {
        return this.hideClone();
      }
    };

    SearchPlanVartical.prototype.showClone = function() {
      if (this.isFixed) {
        return;
      }
      this.isFixed = true;
      this.cloneBottom = 0;
      this.$cloneTarget.css({
        display: 'block',
        top: '',
        bottom: this.cloneBottom
      });
      return this.$target.css({
        visibility: 'hidden'
      });
    };

    SearchPlanVartical.prototype.hideClone = function() {
      if (!this.isFixed) {
        return;
      }
      this.isFixed = false;
      this.cloneBottom = 0;
      this.$cloneTarget.css({
        display: 'none',
        top: '',
        bottom: this.cloneBottom
      });
      return this.$target.css({
        visibility: 'visible'
      });
    };

    SearchPlanVartical.prototype.createClone = function() {
      this.$clone = $(this.$target).clone();
      this.$clone.addClass('is-clone');
      this.$cloneTarget = $('<div>');
      this.$cloneTarget.css({
        width: '100%',
        height: 0,
        display: 'none',
        position: 'fixed',
        zIndex: 900,
        bottom: 0,
        left: 0
      });
      this.$cloneTargetContainer = $('<div>');
      this.$cloneTargetContainer.css({
        maxWidth: 1306,
        minWidth: 1024,
        marginLeft: 'auto',
        marginRight: 'auto',
        position: 'relative',
        boxSizing: 'border-box'
      });
      this.$cloneTargetInner = $('<div>');
      this.$cloneTargetInner.css({
        height: 0,
        width: 1200 / 1306 * 100 + '%',
        marginLeft: 'auto',
        marginRight: 'auto',
        boxSizing: 'border-box',
        position: 'relative'
      });
      this.$cloneTarget.append(this.$cloneTargetContainer);
      this.$cloneTargetContainer.append(this.$cloneTargetInner);
      this.$cloneTargetInner.append(this.$clone);
      return $('body').append(this.$cloneTarget);
    };

    SearchPlanVartical.prototype.onScrollDown = function() {
      var d, scrollBottom, targetBottom;
      scrollBottom = this.scrollTop + this.windowHeight;
      targetBottom = this.targetTop + this.targetHeight;
      if (this.isFixedTop) {
        return this.checkFixedForLargeWindow();
      } else {
        if (scrollBottom > targetBottom) {
          this.showClone();
        } else {
          this.hideClone();
        }
        if (this.isFixed) {
          d = this.scrollTop - this.changePoint;
          if (this.cloneBottom < 0) {
            this.cloneBottom = this.cloneTurningBottom + d;
          } else {
            this.cloneBottom = 0;
          }
          this.$cloneTarget.css({
            top: '',
            bottom: this.cloneBottom
          });
          return this.checkMaxBottom();
        }
      }
    };

    SearchPlanVartical.prototype.onScrollUp = function() {
      var d, scrollBottom, targetBottom;
      scrollBottom = this.scrollTop + this.windowHeight;
      targetBottom = this.targetTop + this.targetHeight;
      if (this.isFixedTop) {
        return this.checkFixedForLargeWindow();
      } else {
        if (this.isFixed) {
          d = this.scrollTop - this.changePoint;
          if (-d >= this.targetHeight + window.decollte.SearchPlanVartical.HEADER_HEIGHT - this.windowHeight) {
            d = -(this.targetHeight + window.decollte.SearchPlanVartical.HEADER_HEIGHT - this.windowHeight);
          }
          this.cloneBottom = d;
          this.$cloneTarget.css({
            top: '',
            bottom: this.cloneBottom
          });
          if (this.scrollTop + window.decollte.SearchPlanVartical.HEADER_HEIGHT <= this.targetTop) {
            this.hideClone();
          }
          return this.checkMaxBottom();
        }
      }
    };

    return SearchPlanVartical;

  })(window.decollte.Base);

  window.decollte.Albums = (function(superClass) {
    extend(Albums, superClass);

    function Albums($target) {
      this.$target = $target;
      Albums.__super__.constructor.call(this, this.$target);
      this.indexAll = $('.c-albums__group').length;
      this.indexNow = 0;
      this.easingIn = 'ease-in-out';
      this.easingOut = 'ease-in-out';
      this.isActive = [];
      $('.p-albums__item').each((function(_this) {
        return function(i, e) {
          return $(e).attr('data-group-id', i + 1);
        };
      })(this));
      $('.p-albums-group').each((function(_this) {
        return function(i, e) {
          return $(e).attr('data-group-id', i + 1);
        };
      })(this));
      $('.p-albums-group__photos').each((function(_this) {
        return function(oi, oe) {
          _this.isActive.push(0);
          return $(oe).children('.p-albums-group__photo').each(function(i, e) {
            return $(e).attr('data-photo-id', i + 1);
          });
        };
      })(this));
      $('.p-albums-group__thmbs').each((function(_this) {
        return function(oi, oe) {
          _this.isActive[oi] = 1;
          return $(oe).children('.p-albums-group__thmb').each(function(i, e) {
            return $(e).attr('data-photo-id', i + 1);
          });
        };
      })(this));
      $('.p-albums__item').on({
        'click': (function(_this) {
          return function(e) {
            var $t;
            $t = $(e.currentTarget);
            _this.indexNow = $t.data('group-id');
            return _this.show();
          };
        })(this)
      });
      $('.c-albums__btn--delete').on({
        'click': (function(_this) {
          return function() {
            return _this.quit();
          };
        })(this)
      });
      $('.c-albums__filter').on({
        'click': (function(_this) {
          return function() {
            return _this.quit();
          };
        })(this)
      });
      $('.c-albums__btn--next').on({
        'click': (function(_this) {
          return function() {
            return _this.next();
          };
        })(this)
      });
      $('.c-albums__btn--prev').on({
        'click': (function(_this) {
          return function() {
            return _this.prev();
          };
        })(this)
      });
      $('.p-albums-group__thmb').on({
        'click': (function(_this) {
          return function(e) {
            return _this.selected(e);
          };
        })(this)
      });
    }

    Albums.prototype.show = function() {
      $('.c-albums').css({
        'display': 'block',
        'opacity': 0
      }).velocity({
        'opacity': 1
      }, {
        duration: 150,
        easing: this.easingOut
      });
      $('.c-albums__group[data-group-id="' + this.indexNow + '"]').addClass('c-albums__group--is-active');
      $('.p-albums-group__photo:first-child').addClass('p-albums-group__photo--is-active');
      $('.p-albums-group__thmb:first-child').addClass('p-albums-group__thmb--is-active');
      return $('body').css({
        'overflow': 'hidden'
      });
    };

    Albums.prototype.quit = function() {
      this.indexNow = 0;
      return $('.c-albums').velocity({
        'opacity': 0
      }, {
        duration: 150,
        easing: this.easingOut,
        complete: function() {
          $('.c-albums').css({
            'display': 'none'
          });
          $('.c-albums__group--is-active').css({
            'left': '',
            'marginLeft': ''
          });
          $('.c-albums__group').removeClass('c-albums__group--is-active');
          return $('body').css({
            'overflow': ''
          });
        }
      });
    };

    Albums.prototype.next = function() {
      var duration, easing;
      easing = "easeOutQuart";
      duration = 450;
      this.indexNow += 1;
      $('.c-albums__group--is-active').stop().velocity({
        'left': '0px',
        'marginLeft': '-633px'
      }, {
        duration: duration,
        easing: easing,
        complete: function() {
          return $(this).css({
            'left': '',
            'marginLeft': ''
          });
        }
      });
      $('.c-albums__group').removeClass('c-albums__group--is-active');
      if (this.indexNow === this.indexAll + 1) {
        this.indexNow = 1;
        $('.c-albums__group[data-group-id="' + this.indexNow + '"]').addClass('c-albums__group--is-active');
      } else {
        $('.c-albums__group[data-group-id="' + this.indexNow + '"]').addClass('c-albums__group--is-active');
      }
      $('.c-albums__group--is-active').css({
        'left': '100%',
        'marginLeft': '0'
      });
      return $('.c-albums__group--is-active').stop().velocity({
        'left': '50%',
        'marginLeft': '-316.5px'
      }, {
        duration: duration,
        easing: easing
      });
    };

    Albums.prototype.prev = function() {
      var duration, easing;
      easing = "easeOutQuart";
      duration = 450;
      this.indexNow -= 1;
      $('.c-albums__group--is-active').stop().velocity({
        'left': '100%',
        'marginLeft': '0'
      }, {
        duration: duration,
        easing: easing,
        complete: function() {
          return $(this).css({
            'left': '',
            'marginLeft': ''
          });
        }
      });
      $('.c-albums__group').removeClass('c-albums__group--is-active');
      if (this.indexNow === 0) {
        this.indexNow = this.indexAll;
        $('.c-albums__group[data-group-id="' + this.indexNow + '"]').addClass('c-albums__group--is-active');
      } else {
        $('.c-albums__group[data-group-id="' + this.indexNow + '"]').addClass('c-albums__group--is-active');
      }
      $('.c-albums__group--is-active').css({
        'left': '0',
        'marginLeft': '-633px'
      });
      return $('.c-albums__group--is-active').stop().velocity({
        'left': '50%',
        'marginLeft': '-316.5px'
      }, {
        duration: duration,
        easing: easing
      });
    };

    Albums.prototype.selected = function(e) {
      var $t, groupId, photoId;
      $t = $(e.currentTarget);
      photoId = $t.data('photo-id');
      groupId = $t.parents('.c-albums__group').data('group-id');
      $('.c-albums__group[data-group-id="' + groupId + '"] .p-albums-group__photo').removeClass('p-albums-group__photo--is-active');
      $('.c-albums__group[data-group-id="' + groupId + '"] .p-albums-group__thmb').removeClass('p-albums-group__thmb--is-active');
      $('.c-albums__group[data-group-id="' + groupId + '"] .p-albums-group__photo[data-photo-id="' + photoId + '"]').addClass('p-albums-group__photo--is-active');
      $('.c-albums__group[data-group-id="' + groupId + '"] .p-albums-group__photo[data-photo-id="' + photoId + '"]').css({
        'opacity': 0.3
      });
      $('.c-albums__group[data-group-id="' + groupId + '"] .p-albums-group__photo[data-photo-id="' + photoId + '"]').velocity({
        'opacity': 1
      }, {
        duration: 450,
        easing: this.easeingIn
      });
      return $('.c-albums__group[data-group-id="' + groupId + '"] .p-albums-group__thmb[data-photo-id="' + photoId + '"]').addClass('p-albums-group__thmb--is-active');
    };

    return Albums;

  })(window.decollte.Base);

  window.decollte.Shares = (function(superClass) {
    extend(Shares, superClass);

    function Shares($target) {
      this.$target = $target;
      Shares.__super__.constructor.call(this, this.$target);
      this.$btns = this.$target.find('[data-j-selector="btn"]');
      this.$btns.on({
        click: (function(_this) {
          return function(e) {
            var $t, h, href, left, top, w;
            $t = $(e.currentTarget);
            href = $t.attr('href');
            w = $t.data('j-width');
            h = $t.data('j-height');
            left = Number((window.screen.width - w) >> 1);
            top = Number((window.screen.height - h) >> 1);
            window.open(href, 'sns', "width=" + w + ", height=" + h + ", left=" + left + ", top=" + top);
            return false;
          };
        })(this)
      });
    }

    return Shares;

  })(window.decollte.Base);

}).call(this);
